{
    "openapi": "3.0.0",
    "info": {
        "title": "Leverpay.io API Documentation",
        "description": "Crypto payment gateway",
        "contact": {
            "email": "abdilkura@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://leverpay-api.azurewebsites.net",
            "description": "Test server"
        }
    ],
    "paths": {
        "/api/v1/activities/logs": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get system logs",
                "operationId": "get system logs",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/add-payment-option": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create new payment option",
                "operationId": "create payment option",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "icon"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "icon": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-payment-options": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all payment options",
                "operationId": "get all payment options",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-all-merchants": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all merchants",
                "operationId": "get all merchants",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-topup-requests": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all topup requests",
                "operationId": "get all topup requests",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/approve-topup-request": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Approve Topup Request",
                "operationId": "Approve Topup Request",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "uuid"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/cancel-topup-request": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "cancel topup request",
                "operationId": "cancel topup request",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "uuid"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-all-users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all user",
                "operationId": "get all user",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-users-kyc-list": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all users kyc list",
                "operationId": "Get all users kyc list",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-merchants-kyc-list": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all merchants kyc list",
                "operationId": "Get all merchants kyc list",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/approve-kyc/{uuid}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Approve KYC",
                "operationId": "Approve KYC",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/find-kyc/{uuid}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Find Kyc by uuid",
                "operationId": "Find Kyc by uuid",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/active-exchange-rate": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get active exchange rate",
                "operationId": "Get active exchange rate",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-exchange-rates-history": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all exchange rate",
                "operationId": "Get all exchange rate",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-transactions": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all Transactions",
                "operationId": "Get all Transactions",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/update-exchange-rates": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "update/change exchange rate",
                "operationId": "update/change exchange rate",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "rate": {
                                        "type": "string"
                                    },
                                    "local_transaction_rate": {
                                        "type": "string"
                                    },
                                    "funding_rate": {
                                        "type": "string"
                                    },
                                    "conversion_rate": {
                                        "type": "string"
                                    },
                                    "international_transaction_rate": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/add-new-bank": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update exchange rates",
                "operationId": "Update exchange rates",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/add-account-number": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Add Account Number",
                "operationId": "Add Account Number",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "bank",
                                    "account_number",
                                    "account_name"
                                ],
                                "properties": {
                                    "bank": {
                                        "type": "string"
                                    },
                                    "account_number": {
                                        "type": "string"
                                    },
                                    "account_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-account-numbers": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all LeverPay Account number",
                "operationId": "Get all LeverPay Account number",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-contact-us-messages": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all contact us messages",
                "operationId": "Get all contact us messages",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/reply-message": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Reply user contact message",
                "operationId": "Reply user contact message",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "uuid",
                                    "reply"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "reply": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-all-invoices": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of invoices",
                "operationId": "get list of invoices",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-user-details/{uuid}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get user details by uuid",
                "operationId": "Get user details by uuid",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-merchant-details/{uuid}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get merchant details by uuid",
                "operationId": "Get merchant details by uuid",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/activate-account": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Activate account",
                "operationId": "Activate account",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "uuid"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/deactivate-account": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Deactivate account",
                "operationId": "Deactivate account",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "uuid"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/fund-wallet": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Fund user wallet by admin",
                "operationId": "Fund user wallet by admin",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "email"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "reference": {
                                        "type": "string"
                                    },
                                    "currency": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/send-mail-to-user": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Send message to user by admin",
                "operationId": "Send message to user by admin",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "subject",
                                    "message"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "subject": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-merchants-for-remittance": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get merchants for remittance",
                "operationId": "Get merchants for remittance",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-all-vouchers": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all vouchers",
                "operationId": "Get all voucher list",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-active-voucher": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get active voucher",
                "operationId": "Get active voucher",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/schedule-merchant-for-payment": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Add merchant to payment schedule list",
                "operationId": "Add merchant to payment schedule list",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "voucher_id",
                                    "uuid",
                                    "amount"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-payment-schedule-list/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get payment schedule list by voucher id",
                "operationId": "Get payment schedule list by voucher id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/complete-remittance": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Confirm and complete payment schedule list",
                "operationId": "Confirm and complete payment schedule list",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "uuid",
                                    "voucher_id"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "voucher_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/get-total-revenue-n-remittance": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get total revenue,remitted amount and uremitted",
                "operationId": "Get total revenue,remitted amount and uremitted",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/admin-login": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Authentication",
                "operationId": "Admin login Authentication",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/admin/admin-forgot-password": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Send forgot password token",
                "operationId": "Admin send forgot password token",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/admin/admin-reset-password": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Reset password",
                "operationId": "Admin reset password",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "old_password",
                                    "new_password",
                                    "confirm_new_password"
                                ],
                                "properties": {
                                    "old_password": {
                                        "type": "string"
                                    },
                                    "new_password": {
                                        "type": "string"
                                    },
                                    "confirm_new_password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/admin/admin-verify-email": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Reset password verification",
                "operationId": "Admin reset password verification",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/admin/admin-logout": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Logout",
                "operationId": "Admin logout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/admin/admin-profile": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Profile",
                "operationId": "Admin Profile",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication & Verification"
                ],
                "summary": "Authentication",
                "operationId": "login Authentication",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/resend-verification-email": {
            "post": {
                "tags": [
                    "Authentication & Verification"
                ],
                "summary": "Resend email verification link",
                "operationId": "Resend email verification link",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/verify-email": {
            "post": {
                "tags": [
                    "Authentication & Verification"
                ],
                "summary": "verify email",
                "operationId": "verify email",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/forgot-password": {
            "post": {
                "tags": [
                    "Authentication & Verification"
                ],
                "summary": "Send forgot password token",
                "operationId": "Send forgot password token",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/reset-password": {
            "post": {
                "tags": [
                    "Authentication & Verification"
                ],
                "summary": "Reset password",
                "operationId": "Reset password",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "new_password",
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    },
                                    "new_password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/user/get-all-banks": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all banks",
                "operationId": "get all banks",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/bills/get-airtime": {
            "get": {
                "tags": [
                    "Providus Bill Payment"
                ],
                "summary": "Get Airtime",
                "operationId": "Get Airtime",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/bills/buy-airtime": {
            "post": {
                "tags": [
                    "Providus Bill Payment"
                ],
                "summary": "Buy Airtime",
                "operationId": "Buy Airtime",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "amount",
                                    "bill_id"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "description": "amount to acquire service",
                                        "type": "string"
                                    },
                                    "bill_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/bills/get-data-details/{bill_id}": {
            "get": {
                "tags": [
                    "Providus Bill Payment"
                ],
                "summary": "Get Data Details",
                "operationId": "Get Data Details",
                "parameters": [
                    {
                        "name": "bill_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/bills/get-data": {
            "get": {
                "tags": [
                    "Providus Bill Payment"
                ],
                "summary": "Get Data",
                "operationId": "Get Data",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/bills/buy-data": {
            "post": {
                "tags": [
                    "Providus Bill Payment"
                ],
                "summary": "Buy Data",
                "operationId": "Buy Data",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "data_id",
                                    "bill_id"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string"
                                    },
                                    "data_id": {
                                        "type": "string"
                                    },
                                    "bill_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/get-cities": {
            "post": {
                "tags": [
                    "Countries, States and Cities"
                ],
                "summary": "Get cities",
                "operationId": "Get cities",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "state_id"
                                ],
                                "properties": {
                                    "state_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/contact-us": {
            "post": {
                "tags": [
                    "ContactUs"
                ],
                "summary": "Contact Us",
                "operationId": "Contact Us",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "subject",
                                    "message"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "subject": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/get-countries": {
            "get": {
                "tags": [
                    "Countries, States and Cities"
                ],
                "summary": "Get all countries",
                "operationId": "get country list",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/admin/add-new-currency": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "create multiple currency",
                "operationId": "create multiple currency",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "currency_code"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "currency_code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/currencies": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Get all currencies",
                "operationId": "get all currencies",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/leverchain/transaction/verify-request/{access_code}": {
            "get": {
                "tags": [
                    "CheckOut"
                ],
                "summary": "Verify Request",
                "operationId": "Verify request by access_code",
                "parameters": [
                    {
                        "name": "access_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/leverchain/transaction/save-details": {
            "post": {
                "tags": [
                    "CheckOut"
                ],
                "summary": "Save Details",
                "operationId": "Save Details",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "phone",
                                    "email",
                                    "access_code"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "access_code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/leverchain/transaction/pay-with-transfer": {
            "post": {
                "tags": [
                    "CheckOut"
                ],
                "summary": "Pay with transfer",
                "operationId": "Pay with transfer",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "access_code"
                                ],
                                "properties": {
                                    "access_code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/leverchain/transaction/pay-with-card": {
            "post": {
                "tags": [
                    "CheckOut"
                ],
                "summary": "Pay with card",
                "operationId": "Pay with card",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "card_number",
                                    "cvv",
                                    "access_code",
                                    "expiry"
                                ],
                                "properties": {
                                    "card_number": {
                                        "type": "string"
                                    },
                                    "cvv": {
                                        "type": "string"
                                    },
                                    "access_code": {
                                        "type": "string"
                                    },
                                    "expiry": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/leverchain/transaction/verify-card-otp": {
            "post": {
                "tags": [
                    "CheckOut"
                ],
                "summary": "Verify card otp",
                "operationId": "Verify card otp",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "payment_id",
                                    "otp"
                                ],
                                "properties": {
                                    "payment_id": {
                                        "type": "string"
                                    },
                                    "otp": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/leverchain/transaction/initialize": {
            "post": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Initialize Transaction",
                "operationId": "Initialize Transaction",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "string"
                                    },
                                    "merchant_reference": {
                                        "type": "string"
                                    },
                                    "currency": {
                                        "type": "string"
                                    },
                                    "product": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/investment": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Submit an investment",
                "operationId": "Submit an investment",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "gender",
                                    "dob",
                                    "email",
                                    "password",
                                    "first_name",
                                    "last_name",
                                    "phone",
                                    "amount",
                                    "confirm_password"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "other_name": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "state_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "amount": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/send-phone-verification-otp": {
            "post": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "Send Phone OTP",
                "operationId": "Send Phone OTP",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "phone"
                                ],
                                "properties": {
                                    "phone": {
                                        "description": "Valid phone number (e.g 08136908764) ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/send-email-verification-otp": {
            "post": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "Send Email OTP",
                "operationId": "Send Email OTP",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Valid email address ",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/verify-otp": {
            "post": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "Verify OTP",
                "operationId": "Verify OTP",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "type",
                                    "otp"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "it should be either phone or email",
                                        "type": "string"
                                    },
                                    "otp": {
                                        "description": "6 digits",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/check-kyc-status": {
            "get": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "Check KYC Status",
                "operationId": "Check KYC Status",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/verify-nin": {
            "post": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "NIN Verification",
                "operationId": "NIN Verification",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "nin"
                                ],
                                "properties": {
                                    "nin": {
                                        "description": "Enter 11 digits valid NIN Number",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/verify-bvn": {
            "post": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "BVN Verification",
                "operationId": "BVN Verification",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "bvn"
                                ],
                                "properties": {
                                    "bvn": {
                                        "description": "Enter 11 digits valid BVN Number",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/verify-address": {
            "post": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "Contact Address Verification",
                "operationId": "Contact Address Verification",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "address",
                                    "proof_of_address"
                                ],
                                "properties": {
                                    "address": {
                                        "description": "Contact Address",
                                        "type": "string"
                                    },
                                    "proof_of_address": {
                                        "description": "Upload proof of address (format jpg, png, or pdf)",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/get-kyc-list": {
            "get": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "Retrieve the list of KYCs",
                "description": "Fetches a list of KYCs filtered by their status. If no filter is applied, all KYCs are retrieved.",
                "operationId": "getKycList",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by KYC status. Valid options are 'all', 'approved', 'pending', or 'declined'.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "all",
                            "enum": [
                                "all",
                                "approved",
                                "pending",
                                "declined"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the KYC list.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "kyc_uuid": {
                                                "description": "Kyc's UUID",
                                                "type": "string"
                                            },
                                            "user_uuid": {
                                                "description": "User's UUID",
                                                "type": "string"
                                            },
                                            "first_name": {
                                                "description": "User's first name.",
                                                "type": "string"
                                            },
                                            "last_name": {
                                                "description": "User's last name.",
                                                "type": "string"
                                            },
                                            "phone": {
                                                "description": "User's phone number.",
                                                "type": "string"
                                            },
                                            "phone_status": {
                                                "description": "Phone verification status.",
                                                "type": "string"
                                            },
                                            "email": {
                                                "description": "User's email address.",
                                                "type": "string"
                                            },
                                            "email_status": {
                                                "description": "Email verification status.",
                                                "type": "string"
                                            },
                                            "nin": {
                                                "description": "User's National Identification Number.",
                                                "type": "string"
                                            },
                                            "nin_status": {
                                                "description": "NIN verification status.",
                                                "type": "string"
                                            },
                                            "nin_details": {
                                                "description": "Details from the NIN verification.",
                                                "type": "object"
                                            },
                                            "bvn": {
                                                "description": "User's Bank Verification Number.",
                                                "type": "string"
                                            },
                                            "bvn_status": {
                                                "description": "BVN verification status.",
                                                "type": "string"
                                            },
                                            "bvn_details": {
                                                "description": "Details from the BVN verification.",
                                                "type": "object"
                                            },
                                            "contact_address": {
                                                "description": "User's contact address.",
                                                "type": "string"
                                            },
                                            "proof_of_address": {
                                                "description": "Proof of address document.",
                                                "type": "string"
                                            },
                                            "live_face_verification": {
                                                "description": "Live face verification result.",
                                                "type": "string"
                                            },
                                            "admin_approval_status": {
                                                "description": "Admin's approval status.",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No KYCs found or an error occurred."
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/get-user-kyc-details": {
            "get": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "Retrieve User KYC Details",
                "description": "Fetch detailed Know Your Customer (KYC) information for a user by providing their UUID.",
                "operationId": "getUserKycDetails",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Unique identifier (UUID) of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "KYC details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "kyc_uuid": {
                                                "description": "Kyc's UUID",
                                                "type": "string"
                                            },
                                            "user_uuid": {
                                                "description": "User's UUID",
                                                "type": "string"
                                            },
                                            "first_name": {
                                                "description": "User's first name",
                                                "type": "string"
                                            },
                                            "last_name": {
                                                "description": "User's last name",
                                                "type": "string"
                                            },
                                            "phone": {
                                                "description": "User's phone number",
                                                "type": "string"
                                            },
                                            "phone_status": {
                                                "description": "Phone verification status",
                                                "type": "string"
                                            },
                                            "email": {
                                                "description": "User's email address",
                                                "type": "string"
                                            },
                                            "email_status": {
                                                "description": "Email verification status",
                                                "type": "string"
                                            },
                                            "nin": {
                                                "description": "National Identification Number",
                                                "type": "string"
                                            },
                                            "nin_status": {
                                                "description": "NIN submission status",
                                                "type": "string"
                                            },
                                            "nin_details": {
                                                "description": "Decoded NIN details",
                                                "type": "object"
                                            },
                                            "bvn": {
                                                "description": "Bank Verification Number",
                                                "type": "string"
                                            },
                                            "bvn_status": {
                                                "description": "BVN submission status",
                                                "type": "string"
                                            },
                                            "bvn_details": {
                                                "description": "BVN details",
                                                "type": "string"
                                            },
                                            "contact_address": {
                                                "description": "User's contact address",
                                                "type": "string"
                                            },
                                            "proof_of_address": {
                                                "description": "Proof of address document",
                                                "type": "string"
                                            },
                                            "live_face_verification": {
                                                "description": "Live face verification status",
                                                "type": "string"
                                            },
                                            "admin_approval_status": {
                                                "description": "Admin approval status for KYC",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No available KYC details for the specified UUID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Available KYC"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/approve-reject-kyc": {
            "post": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "Approve or reject KYC by admin",
                "operationId": "ApproveOrRejectKYC",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "status",
                                    "uuid"
                                ],
                                "properties": {
                                    "uuid": {
                                        "description": "Unique identifier for the KYC record",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "KYC approval status",
                                        "type": "string",
                                        "default": "approved",
                                        "enum": [
                                            "approved",
                                            "pending",
                                            "declined"
                                        ]
                                    },
                                    "admin_comment": {
                                        "description": "Optional admin comment",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "KYC record not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/reset-user-kyc": {
            "get": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "Reset User kyc",
                "description": "Reset user kyc",
                "operationId": "resettUserKyc",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "Unique identifier (UUID) of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                        }
                    }
                ],
                "responses": {
                    "422": {
                        "description": "No available KYC details for the specified UUID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No Available KYC"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/logout": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Merchant Logout",
                "operationId": "Merchant Logout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/signup": {
            "post": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Create a new merchant account",
                "operationId": "create a new merchant",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "first_name",
                                    "last_name",
                                    "address",
                                    "business_name",
                                    "phone"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "other_name": {
                                        "type": "string"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "business_name": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "state_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "city_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "referral_code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/create-invoice": {
            "post": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Create a new invoice",
                "operationId": "create new invoice",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "product_name",
                                    "price",
                                    "vat",
                                    "email",
                                    "currency"
                                ],
                                "properties": {
                                    "product_name": {
                                        "type": "string"
                                    },
                                    "product_description": {
                                        "type": "string"
                                    },
                                    "price": {
                                        "type": "string"
                                    },
                                    "vat": {
                                        "type": "string"
                                    },
                                    "currency": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/product/{uuid}": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get invoice by product uuid",
                "operationId": "get invoice by product uuid",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/get-invoices": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all invoices",
                "operationId": "get all invoices",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/pay-invoice": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Pay invoice",
                "operationId": "Pay new invoice",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "uuid"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/verify-invoices-otp": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Verify invoice otp",
                "operationId": "Verify invoice otp",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "uuid",
                                    "otp"
                                ],
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "otp": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/get-invoices": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get all merchants invoices",
                "operationId": "get all merchants invoices",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/get-merchant-total-transactions": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get merchant total transactions (monthly, weekly and daily)",
                "operationId": "Get merchant total transactions (monthly, weekly and daily)",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/merchant-total-successfull-failed-transactions": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get merchant total successfull and failed transactions",
                "operationId": "Get merchant total successfull and failed transactions",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/invoice-detatails/{uuid}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user invoice details by product uuid",
                "operationId": "get user invoice details by product uuid",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/merchant-revenue-generated": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get merchant revenue generated details",
                "operationId": "get merchant revenue generated details",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/get-merchant-profile": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get merchant profile",
                "operationId": "get merchant profile details",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/update-merchant-profile": {
            "post": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Update merchant profile",
                "operationId": "Update merchant profile",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "first_name",
                                    "last_name",
                                    "address",
                                    "business_name",
                                    "phone",
                                    "country_id",
                                    "state_id",
                                    "city_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "business_name": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "state_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "city_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "passport": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/get-merchant-currencie": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get merchant's currencies",
                "operationId": "get merchant's currencies",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/add-currencies": {
            "post": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Add merchant curriencies",
                "operationId": "Add merchant curriencies",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "curriencies"
                                ],
                                "properties": {
                                    "curriencies": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/get-merchant-keys": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get merchant's merchant keys",
                "operationId": "get merchant's merchant keys",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/get-merchant-account": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get merchant virtual account",
                "operationId": "get merchant virtual account",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/change-mode": {
            "post": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Change to mode from test mode to live mode or vise versa",
                "operationId": "Change test mode to live ",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "mode"
                                ],
                                "properties": {
                                    "mode": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/add-merchant-kyc": {
            "post": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Add Merchant KYC document",
                "operationId": "Add Merchant KYC document",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "document_type_id",
                                    "country_id",
                                    "id_card_front"
                                ],
                                "properties": {
                                    "document_type_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "id_card_front": {
                                        "type": "file"
                                    },
                                    "id_card_back": {
                                        "type": "file"
                                    },
                                    "country_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "state_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "bvn": {
                                        "type": "string"
                                    },
                                    "nin": {
                                        "type": "string"
                                    },
                                    "business_address": {
                                        "type": "string"
                                    },
                                    "business_certificate": {
                                        "type": "file"
                                    },
                                    "rc_number": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/merchant-kyc-details": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get merchant kyc details",
                "operationId": "Get merchant kyc details",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/get-merchant-users-count": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get merchant total active and inactive users",
                "operationId": "Get merchant total active and inactive users",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/quickteller/generate-acess-token": {
            "get": {
                "tags": [
                    "Quick Teller"
                ],
                "summary": "Generate Access token",
                "operationId": "Generate Access token",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/quickteller/get-billers": {
            "get": {
                "tags": [
                    "Quick Teller"
                ],
                "summary": "Get billers",
                "operationId": "Get billers",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/quickteller/get-billers-categories": {
            "get": {
                "tags": [
                    "Quick Teller"
                ],
                "summary": "Get billers categories",
                "operationId": "Get billers categories",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/quickteller/get-billers-by-category-id": {
            "get": {
                "tags": [
                    "Quick Teller"
                ],
                "summary": "Get billers by category id",
                "operationId": "Get billers by category id",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "query",
                        "description": "This is returned from get-billers-categories as Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/quickteller/get-biller-payment-items": {
            "get": {
                "tags": [
                    "Quick Teller"
                ],
                "summary": "Get biller payment items",
                "operationId": "Get biller payment items",
                "parameters": [
                    {
                        "name": "billerId",
                        "in": "query",
                        "description": "This is returned from get-billers-by-category-id as Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/quickteller/get-biller-payment-items-by-amount": {
            "get": {
                "tags": [
                    "Quick Teller"
                ],
                "summary": "Get biller payment items by amount",
                "operationId": "Get biller payment items  by amount",
                "parameters": [
                    {
                        "name": "billerId",
                        "in": "query",
                        "description": "This is returned from get-billers-by-category-id as Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount to recharge",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/quickteller/validate-customer": {
            "post": {
                "tags": [
                    "Quick Teller"
                ],
                "summary": "Validate Customer",
                "operationId": "Validate Customer",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "customerId",
                                    "paymentCode"
                                ],
                                "properties": {
                                    "customerId": {
                                        "type": "string"
                                    },
                                    "paymentCode": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/quickteller/submit-bill-payment": {
            "post": {
                "tags": [
                    "Quick Teller"
                ],
                "summary": "Submit Bill Payment Advice",
                "operationId": "Submit Bill Payment Advice",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "customerId",
                                    "amount",
                                    "paymentCode",
                                    "billerCategoryId",
                                    "billerName",
                                    "itemName",
                                    "customerEmail",
                                    "customerMobile",
                                    "refrenceNo",
                                    "pin"
                                ],
                                "properties": {
                                    "customerId": {
                                        "description": "e.g Phone Number or Meter Token",
                                        "type": "string"
                                    },
                                    "amount": {
                                        "description": "amount to acquire service",
                                        "type": "string"
                                    },
                                    "paymentCode": {
                                        "description": "This is returned from get-biller-payment-items and it should be hidden",
                                        "type": "string"
                                    },
                                    "itemName": {
                                        "description": "This is returned from get-biller-payment-items as Name. The field should be hidden",
                                        "type": "string"
                                    },
                                    "billerName": {
                                        "description": "This is returned from get-biller-payment-items as BillerName  and it should be hidden",
                                        "type": "string"
                                    },
                                    "billerCategoryId": {
                                        "description": "This is returned from get-biller-payment-items as BillerCategoryId  and it should be hidden",
                                        "type": "string"
                                    },
                                    "customerEmail": {
                                        "description": "Customer Email",
                                        "type": "string"
                                    },
                                    "customerMobile": {
                                        "description": "Customer Phone Number",
                                        "type": "string"
                                    },
                                    "refrenceNo": {
                                        "description": "This is returned from get-biller-payment-items and it should be hidden",
                                        "type": "string"
                                    },
                                    "pin": {
                                        "description": "bill payment pin",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/quickteller/get-customer-transaction": {
            "get": {
                "tags": [
                    "Quick Teller"
                ],
                "summary": "Get customer transaction by refNo",
                "operationId": "Get customer transaction by refNo",
                "parameters": [
                    {
                        "name": "requestRef",
                        "in": "query",
                        "description": "transaction reference no",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/selfie/start": {
            "post": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "Start Selfie",
                "operationId": "Start Selfie",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/brails-kyc/selfie/send": {
            "post": {
                "tags": [
                    "Brails KYC"
                ],
                "summary": "Send Selfie Image",
                "operationId": "Send Selfie Image",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image_data"
                                ],
                                "properties": {
                                    "image_data": {
                                        "description": "Selfie Image Data",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/get-states": {
            "post": {
                "tags": [
                    "Countries, States and Cities"
                ],
                "summary": "Get states",
                "operationId": "Get states",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "country_id"
                                ],
                                "properties": {
                                    "country_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/logout": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User Logout",
                "operationId": "User logout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/signup": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user account",
                "operationId": "create a new user",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "gender",
                                    "dob",
                                    "email",
                                    "password",
                                    "first_name",
                                    "last_name",
                                    "phone"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "other_name": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "state_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "city_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "referral_code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/set-pin": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Set Card Pin",
                "operationId": "Set Card Pin",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "pin"
                                ],
                                "properties": {
                                    "pin": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/get-card": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get card",
                "operationId": "get card",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/checkout/create-payment": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create Card Payment",
                "operationId": "Create Card Payment",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "pin"
                                ],
                                "properties": {
                                    "pin": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/get-user-profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user profile",
                "operationId": "get user profile details",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/search-user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Search User by Email",
                "operationId": "Search User by Email",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/update-user-profile": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update user profile",
                "operationId": "Update user profile",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "other_name": {
                                        "type": "string"
                                    },
                                    "other_email": {
                                        "type": "string"
                                    },
                                    "other_phone": {
                                        "type": "string"
                                    },
                                    "primary_email": {
                                        "type": "string"
                                    },
                                    "primary_phone": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "state_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "city_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "passport": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/get-user-currencies": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get user's currencies",
                "operationId": "get user's currencies",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/add-currencies": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add user curriencies",
                "operationId": "Add user curriencies",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "curriencies"
                                ],
                                "properties": {
                                    "curriencies": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/add-bank-account": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add bank account",
                "operationId": "Add bank account",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "bank_id",
                                    "account_no"
                                ],
                                "properties": {
                                    "account_no": {
                                        "type": "string"
                                    },
                                    "bank_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/get-user-bank-account": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user bank account",
                "operationId": "get user bank account",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/upgrade-to-gold-card-kyc": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Upgarte to gold card kyc",
                "operationId": "Upgarte to gold card kyc",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "document_type_id",
                                    "country_id",
                                    "state_id",
                                    "residential_address",
                                    "passport",
                                    "id_card_front",
                                    "bvn",
                                    "nin",
                                    "place_of_birth"
                                ],
                                "properties": {
                                    "passport": {
                                        "type": "file"
                                    },
                                    "document_type_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "id_card_front": {
                                        "type": "file"
                                    },
                                    "id_card_back": {
                                        "type": "file"
                                    },
                                    "bvn": {
                                        "type": "string"
                                    },
                                    "nin": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "state_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "place_of_birth": {
                                        "type": "string"
                                    },
                                    "residential_address": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/gold-kyc-upgrade-details": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user gold card kyc details",
                "operationId": "Get user gold card kyc details",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/upgrade-to-diamond-card-kyc": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Upgarte to diamond card kyc",
                "operationId": "Upgarte to diamond card kyc",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "document_type_id",
                                    "id_card_front",
                                    "utility_bill"
                                ],
                                "properties": {
                                    "document_type_id": {
                                        "type": "string",
                                        "enum": [
                                            "1"
                                        ]
                                    },
                                    "id_card_front": {
                                        "type": "file"
                                    },
                                    "id_card_back": {
                                        "type": "file"
                                    },
                                    "utility_bill": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/diamond-kyc-upgrade-details": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user diamond card kyc details",
                "operationId": "Get user diamond card kyc details",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/upgrade-to-enterprise-card-kyc": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Upgarte to enterprise card kyc",
                "operationId": "Upgarte to enterprise card kyc",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "business_address",
                                    "business_certificate",
                                    "rc_no"
                                ],
                                "properties": {
                                    "business_certificate": {
                                        "type": "file"
                                    },
                                    "business_address": {
                                        "type": "string"
                                    },
                                    "rc_no": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/enterprise-kyc-upgrade-details": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user enterprise card kyc details",
                "operationId": "Get user enterprise card kyc details",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/get-exchange-rates": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get exchange rate",
                "operationId": "Get exchange rate",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/get-referral-code": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get referral code",
                "operationId": "Get referral code",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/get-referrals": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get referrals",
                "operationId": "Get referrals",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/etherscan/validate-transaction": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Validate crepto funding transaction",
                "operationId": "Validate crepto funding transaction",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "transaction_hash",
                                    "amount"
                                ],
                                "properties": {
                                    "transaction_hash": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/vfd/check-transaction/{reference_no}": {
            "get": {
                "tags": [
                    "VFD Bill Payment"
                ],
                "summary": "Check transaction by reference no",
                "operationId": "Check transaction by reference no",
                "parameters": [
                    {
                        "name": "reference_no",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/vfd/get-biller-categories": {
            "get": {
                "tags": [
                    "VFD Bill Payment"
                ],
                "summary": "Get Biller Categories",
                "operationId": "Get Biller Categories",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/vfd/get-biller-list/{categoryName}": {
            "get": {
                "tags": [
                    "VFD Bill Payment"
                ],
                "summary": "Get Biller List",
                "operationId": "Get Biller List",
                "parameters": [
                    {
                        "name": "categoryName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/vfd/get-biller-items/{billerId}/{divisionId}/{productId}": {
            "get": {
                "tags": [
                    "VFD Bill Payment"
                ],
                "summary": "Get Biller Items",
                "operationId": "Get Biller Items",
                "parameters": [
                    {
                        "name": "billerId",
                        "in": "path",
                        "description": "This is returned from biller List",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "divisionId",
                        "in": "path",
                        "description": "This is returned from biller List",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "This is returned from biller List",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/vfd/validate-customer": {
            "get": {
                "tags": [
                    "VFD Bill Payment"
                ],
                "summary": "Validate Customer",
                "operationId": "validateCustomer",
                "parameters": [
                    {
                        "name": "divisionId",
                        "in": "query",
                        "description": "This is returned from biller List as division",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentItem",
                        "in": "query",
                        "description": "This is returned from biller items as paymentCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Customer Id i.e Meter Token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "billerId",
                        "in": "query",
                        "description": "This signifies the ID of the biller it is returned from the Biller List",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/vfd/submit-bill-payment": {
            "post": {
                "tags": [
                    "VFD Bill Payment"
                ],
                "summary": "Submit Bill Payment",
                "operationId": "Submit Bill Payment",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "customerId",
                                    "amount",
                                    "division",
                                    "paymentItem",
                                    "productId",
                                    "billerId",
                                    "pin",
                                    "reference_no"
                                ],
                                "properties": {
                                    "customerId": {
                                        "description": "e.g Phone Number or Meter Token",
                                        "type": "string"
                                    },
                                    "amount": {
                                        "description": "amount to acquire service",
                                        "type": "string"
                                    },
                                    "division": {
                                        "description": "This is returned from biller List and it should be hidden",
                                        "type": "string"
                                    },
                                    "paymentItem": {
                                        "description": "This is returned from biller items and it should be hidden",
                                        "type": "string"
                                    },
                                    "productId": {
                                        "description": "This is returned from biller List and it should be hidden",
                                        "type": "string"
                                    },
                                    "billerId": {
                                        "description": "This signifies the ID of the biller it is returned from the Biller List and it should be hidden",
                                        "type": "string"
                                    },
                                    "pin": {
                                        "description": "bill payment pin",
                                        "type": "string"
                                    },
                                    "reference_no": {
                                        "description": "transaction reference no",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "enter email if any",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/vfd/create-new-pin": {
            "post": {
                "tags": [
                    "VFD Bill Payment"
                ],
                "summary": "Create Pin",
                "operationId": "Create Pin",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "pin",
                                    "confirm_pin"
                                ],
                                "properties": {
                                    "pin": {
                                        "description": "it should be 4 digits",
                                        "type": "string"
                                    },
                                    "confirm_pin": {
                                        "description": "same as above",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/vfd/reset-billpayment-pin": {
            "post": {
                "tags": [
                    "VFD Bill Payment"
                ],
                "summary": "Reset Billpayment Pin",
                "operationId": "Reset Billpayment Pin",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "pin",
                                    "confirm_new_pin"
                                ],
                                "properties": {
                                    "pin": {
                                        "description": "it should be 4 digits",
                                        "type": "string"
                                    },
                                    "confirm_new_pin": {
                                        "description": "same as above",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/vfd/get-billpayments-history": {
            "get": {
                "tags": [
                    "VFD Bill Payment"
                ],
                "summary": "Get Bill Payments History",
                "operationId": "Get Bill Payments History",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/vfd/get-cashback-rate": {
            "get": {
                "tags": [
                    "VFD Bill Payment"
                ],
                "summary": "Get VFD cash back rate",
                "operationId": "Get VFD cash back rate",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/claim-referral-bonus": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Claim Referral Bonus",
                "operationId": "Claim Referral Bonus",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Referral bonus total amount",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/get-all-topup-requests": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user all topup request",
                "operationId": "get user all topup request",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/submit-topup-request": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "submit topup request",
                "operationId": "submit topup request",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "document"
                                ],
                                "properties": {
                                    "reference": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number"
                                    },
                                    "document": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/get-wallet": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user wallet",
                "operationId": "get user  wallet details",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/verify-transaction": {
            "get": {
                "tags": [
                    "Authentication & Verification"
                ],
                "summary": "Verify transaction",
                "operationId": "Verify wallet transaction",
                "parameters": [
                    {
                        "name": "trxref",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reference",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/get-user-transactions": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user transactions",
                "operationId": "get user transactions details",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/transfer": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "transfer",
                "operationId": "transfer",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "amount"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/verify-transfer": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Verify transfer",
                "operationId": "Verify transfer",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "uuid",
                                    "otp"
                                ],
                                "properties": {
                                    "otp": {
                                        "type": "number"
                                    },
                                    "uuid": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/user/generate-account": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Generate unique account no",
                "operationId": "Generate unique account no",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "type"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v1/merchant/get-merchant-wallet": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Get merchant wallet balance",
                "operationId": "get merchant  wallet balance",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer_token": {
                "type": "http",
                "scheme": "bearer",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "https://leverpay-api.azurewebsites.net/oauth/authorize",
                        "tokenUrl": "https://leverpay-api.azurewebsites.net/oauth/token",
                        "refreshUrl": "https://leverpay-api.azurewebsites.net/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    ]
}